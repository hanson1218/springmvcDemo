<?xml version="1.0" encoding="UTF-8"?>   
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans      
	http://www.springframework.org/schema/beans/spring-beans.xsd      
	http://www.springframework.org/schema/context      
	http://www.springframework.org/schema/context/spring-context.xsd      
	http://www.springframework.org/schema/tx      
	http://www.springframework.org/schema/tx/spring-tx.xsd">
        
	<context:component-scan base-package="com.snow.www.service" />
        
    <!-- spring-mybatis整合 ,-->
	<!-- 1.分解配置 jdbc.properites -->  
	<context:property-placeholder location="classpath:jdbc.properties" />  
    	
	<!-- 2.添加数据库连接池-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.userName}" />
		<property name="password" value="${jdbc.password}" />
		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeouy}" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
	</bean>
    	
	<!-- 3.配置SqlSessionFactory对象 ,使用mybatis配置方式和下面这种spring配置方式都行，多数据源时要注意：dataSource中配置不同的库，这个位置也要配置不同的sqlSessionFactory和MapperScannerConfigurer-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
            
		<!-- 配置MyBaties全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
            
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="com.snow.www.entity" />
            
		<!-- 扫描SQL配置文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
	</bean>
        
	<!-- 4.配置扫描DAO接口包，动态实现DAO接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory 这个位置的sqlSessionFactory要和上面一致，将来如果配置多数据源时要注意-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描DAO接口包 -->
		<property name="basePackage" value="com.snow.www.dao" />
	</bean>
	<!-- spring-mybatis整合 -->
	
	<bean id="factoryBeanTest" class="com.snow.www.init.FactoryBeanTest">
		<property name="test" value="com.snow.www.service.impl.FactoryBeanTestServiceImpl"></property>
	</bean>
        
	<!-- Spring中引入其他配置文件 -->
	<import resource="spring-tools.xml" />
	<import resource="config.xml" />
</beans>